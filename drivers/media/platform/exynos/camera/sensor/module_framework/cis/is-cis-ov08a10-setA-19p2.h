/* SPDX-License-Identifier: GPL-2.0 */
/*
 * Samsung Exynos SoC series Sensor driver
 *
 *
 * Copyright (c) 2024 Samsung Electronics Co., Ltd
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef IS_CIS_OV08A10_SET_A_19P2_H
#define IS_CIS_OV08A10_SET_A_19P2_H

#include "is-cis.h"
#include "is-cis-ov08a10.h"
#ifdef USE_CAMERA_ADAPTIVE_MIPI
#include "is-cis-ov08a10-setA-19p2-adaptive-mipi.h"
#endif

/* Global */
const u16 sensor_ov08a10_setfile_A_19p2_Global[] = {
	0x0103, 0x01, 0x01,
	IXC_DELAY_US(16000),
	0x0100, 0x00, 0x01,
	0x0102, 0x01, 0x01,
	0x0303, 0x05, 0x01,
	0x0304, 0x01, 0x01,
	0x0305, 0x9f, 0x01,
	0x0306, 0x01, 0x01,
	0x0307, 0x00, 0x01,
	0x0323, 0x04, 0x01,
	0x0324, 0x01, 0x01,
	0x0325, 0x90, 0x01,
	0x4837, 0x10, 0x01,
	0x3009, 0x06, 0x01,
	0x3012, 0x41, 0x01,
	0x301e, 0x98, 0x01,
	0x3026, 0x10, 0x01,
	0x3027, 0x08, 0x01,
	0x3106, 0x00, 0x01,
	0x3216, 0x01, 0x01,
	0x3217, 0x00, 0x01,
	0x3218, 0x00, 0x01,
	0x3219, 0x55, 0x01,
	0x3400, 0x00, 0x01,
	0x3408, 0x02, 0x01,
	0x340c, 0x20, 0x01,
	0x340d, 0x00, 0x01,
	0x3410, 0x00, 0x01,
	0x3412, 0x00, 0x01,
	0x3413, 0x00, 0x01,
	0x3414, 0x00, 0x01,
	0x3415, 0x00, 0x01,
	0x3501, 0x16, 0x01,
	0x3502, 0xfa, 0x01,
	0x3504, 0x08, 0x01,
	0x3508, 0x04, 0x01,
	0x3509, 0x00, 0x01,
	0x353c, 0x04, 0x01,
	0x353d, 0x00, 0x01,
	0x3600, 0x20, 0x01,
	0x3608, 0x87, 0x01,
	0x3609, 0xe0, 0x01,
	0x360a, 0x66, 0x01,
	0x360c, 0x20, 0x01,
	0x361a, 0x80, 0x01,
	0x361b, 0xd0, 0x01,
	0x361c, 0x11, 0x01,
	0x361d, 0x63, 0x01,
	0x361e, 0x76, 0x01,
	0x3620, 0x50, 0x01,
	0x3621, 0x0a, 0x01,
	0x3622, 0x8a, 0x01,
	0x3625, 0x88, 0x01,
	0x3626, 0x49, 0x01,
	0x362a, 0x80, 0x01,
	0x3632, 0x00, 0x01,
	0x3633, 0x10, 0x01,
	0x3634, 0x10, 0x01,
	0x3635, 0x10, 0x01,
	0x3636, 0x0e, 0x01,
	0x3659, 0x11, 0x01,
	0x365a, 0x23, 0x01,
	0x365b, 0x38, 0x01,
	0x365c, 0x80, 0x01,
	0x3661, 0x0f, 0x01,
	0x3662, 0x80, 0x01,
	0x3663, 0x40, 0x01,
	0x3665, 0x12, 0x01,
	0x3668, 0xf0, 0x01,
	0x3669, 0x0a, 0x01,
	0x366a, 0x10, 0x01,
	0x366b, 0x43, 0x01,
	0x366c, 0x12, 0x01,
	0x3674, 0x00, 0x01,
	0x3706, 0x1b, 0x01,
	0x3709, 0x25, 0x01,
	0x370b, 0x3f, 0x01,
	0x370c, 0x03, 0x01,
	0x3713, 0x02, 0x01,
	0x3714, 0x63, 0x01,
	0x3726, 0x20, 0x01,
	0x373b, 0x06, 0x01,
	0x373d, 0x0a, 0x01,
	0x3752, 0x00, 0x01,
	0x3753, 0x00, 0x01,
	0x3754, 0xee, 0x01,
	0x3767, 0x08, 0x01,
	0x3768, 0x0e, 0x01,
	0x3769, 0x02, 0x01,
	0x376a, 0x00, 0x01,
	0x376b, 0x00, 0x01,
	0x37d9, 0x08, 0x01,
	0x37dc, 0x00, 0x01,
	0x3800, 0x00, 0x01,
	0x3801, 0x00, 0x01,
	0x3802, 0x00, 0x01,
	0x3803, 0x08, 0x01,
	0x3804, 0x0c, 0x01,
	0x3805, 0xdf, 0x01,
	0x3806, 0x09, 0x01,
	0x3807, 0xa7, 0x01,
	0x3808, 0x0c, 0x01,
	0x3809, 0xc0, 0x01,
	0x380a, 0x09, 0x01,
	0x380b, 0x90, 0x01,
	0x380c, 0x03, 0x01,
	0x380d, 0x86, 0x01,
	0x380e, 0x17, 0x01,
	0x380f, 0x1a, 0x01,
	0x3810, 0x00, 0x01,
	0x3811, 0x11, 0x01,
	0x3812, 0x00, 0x01,
	0x3813, 0x08, 0x01,
	0x3814, 0x11, 0x01,
	0x3815, 0x11, 0x01,
	0x3820, 0x80, 0x01,
	0x3821, 0x04, 0x01,
	0x3823, 0x00, 0x01,
	0x3824, 0x00, 0x01,
	0x3825, 0x00, 0x01,
	0x3826, 0x00, 0x01,
	0x3827, 0x00, 0x01,
	0x382b, 0x08, 0x01,
	0x3834, 0xf4, 0x01,
	0x3836, 0x14, 0x01,
	0x3837, 0x04, 0x01,
	0x3898, 0x00, 0x01,
	0x38a0, 0x02, 0x01,
	0x38a1, 0x02, 0x01,
	0x38a2, 0x02, 0x01,
	0x38a3, 0x04, 0x01,
	0x38c3, 0x00, 0x01,
	0x38c4, 0x00, 0x01,
	0x38c5, 0x00, 0x01,
	0x38c6, 0x00, 0x01,
	0x38c7, 0x00, 0x01,
	0x38c8, 0x00, 0x01,
	0x3d8c, 0x60, 0x01,
	0x3d8d, 0x30, 0x01,
	0x3f00, 0x8b, 0x01,
	0x4000, 0xf7, 0x01,
	0x4001, 0x60, 0x01,
	0x4002, 0x00, 0x01,
	0x4003, 0x40, 0x01,
	0x4008, 0x02, 0x01,
	0x4009, 0x11, 0x01,
	0x400a, 0x01, 0x01,
	0x400b, 0x00, 0x01,
	0x4020, 0x00, 0x01,
	0x4021, 0x00, 0x01,
	0x4022, 0x00, 0x01,
	0x4023, 0x00, 0x01,
	0x4024, 0x00, 0x01,
	0x4025, 0x00, 0x01,
	0x4026, 0x00, 0x01,
	0x4027, 0x00, 0x01,
	0x4030, 0x00, 0x01,
	0x4031, 0x00, 0x01,
	0x4032, 0x00, 0x01,
	0x4033, 0x00, 0x01,
	0x4034, 0x00, 0x01,
	0x4035, 0x00, 0x01,
	0x4036, 0x00, 0x01,
	0x4037, 0x00, 0x01,
	0x4040, 0x00, 0x01,
	0x4041, 0x07, 0x01,
	0x4201, 0x00, 0x01,
	0x4202, 0x00, 0x01,
	0x4204, 0x09, 0x01,
	0x4205, 0x00, 0x01,
	0x4300, 0xff, 0x01,
	0x4301, 0x00, 0x01,
	0x4302, 0x0f, 0x01,
	0x4500, 0x08, 0x01,
	0x4501, 0x00, 0x01,
	0x450b, 0x00, 0x01,
	0x4640, 0x00, 0x01,
	0x4641, 0x18, 0x01,
	0x4642, 0x62, 0x01,
	0x4643, 0x0a, 0x01,
	0x4645, 0x04, 0x01,
	0x4800, 0x00, 0x01,
	0x4803, 0x18, 0x01,
	0x4809, 0x2b, 0x01,
	0x480e, 0x07, 0x01,
	0x4813, 0x98, 0x01,
	0x481b, 0x3c, 0x01,
	0x4820, 0x01, 0x01,
	0x4821, 0x14, 0x01,
	0x482e, 0x34, 0x01,
	0x4847, 0x01, 0x01,
	0x4856, 0x58, 0x01,
	0x4888, 0x90, 0x01,
	0x4901, 0x00, 0x01,
	0x4902, 0x00, 0x01,
	0x4904, 0x09, 0x01,
	0x4905, 0x00, 0x01,
	0x5000, 0x89, 0x01,
	0x5001, 0x58, 0x01,
	0x5002, 0x55, 0x01,
	0x5003, 0x42, 0x01,
	0x5005, 0xd0, 0x01,
	0x5007, 0xa0, 0x01,
	0x500a, 0x02, 0x01,
	0x500b, 0x02, 0x01,
	0x500c, 0x0a, 0x01,
	0x500d, 0x0a, 0x01,
	0x500e, 0x02, 0x01,
	0x500f, 0x06, 0x01,
	0x5010, 0x0a, 0x01,
	0x5011, 0x0e, 0x01,
	0x5013, 0x00, 0x01,
	0x5015, 0x00, 0x01,
	0x5017, 0x10, 0x01,
	0x5019, 0x00, 0x01,
	0x501b, 0xc0, 0x01,
	0x501d, 0xa0, 0x01,
	0x501e, 0x00, 0x01,
	0x501f, 0x40, 0x01,
	0x5023, 0x70, 0x01,
	0x5025, 0x08, 0x01,
	0x5026, 0x0c, 0x01,
	0x5027, 0x00, 0x01,
	0x5028, 0x09, 0x01,
	0x5029, 0x90, 0x01,
	0x5058, 0x00, 0x01,
	0x5081, 0x00, 0x01,
	0x5180, 0x02, 0x01,
	0x5181, 0x00, 0x01,
	0x5182, 0x03, 0x01,
	0x5183, 0xfb, 0x01,
	0x5200, 0x4f, 0x01,
	0x5203, 0x07, 0x01,
	0x5208, 0xff, 0x01,
	0x520a, 0x3f, 0x01,
	0x520b, 0xc0, 0x01,
	0x520c, 0x05, 0x01,
	0x520d, 0xc8, 0x01,
	0x520e, 0x3f, 0x01,
	0x520f, 0x0f, 0x01,
	0x5210, 0x0a, 0x01,
	0x5218, 0x02, 0x01,
	0x5219, 0x01, 0x01,
	0x521b, 0x02, 0x01,
	0x521c, 0x01, 0x01,
	0x58cb, 0x03, 0x01,
};

/* 1. 4:3 Full 30Fps */
const u16 sensor_ov08a10_setfile_A_3264x2448_30fps[] = {
	0x0303, 0x05, 0x01,
	0x0305, 0x9f, 0x01,
	0x0325, 0x90, 0x01,
	0x4837, 0x10, 0x01,
	0x3501, 0x16, 0x01,
	0x3502, 0xfa, 0x01,
	0x3661, 0x0f, 0x01,
	0x3662, 0x80, 0x01,
	0x366c, 0x12, 0x01,
	0x3714, 0x63, 0x01,
	0x3800, 0x00, 0x01,
	0x3801, 0x00, 0x01,
	0x3802, 0x00, 0x01,
	0x3803, 0x08, 0x01,
	0x3804, 0x0c, 0x01,
	0x3805, 0xdf, 0x01,
	0x3806, 0x09, 0x01,
	0x3807, 0xa7, 0x01,
	0x3808, 0x0c, 0x01,
	0x3809, 0xc0, 0x01,
	0x380a, 0x09, 0x01,
	0x380b, 0x90, 0x01,
	0x380e, 0x17, 0x01,
	0x380f, 0x1a, 0x01,
	0x3810, 0x00, 0x01,
	0x3811, 0x11, 0x01,
	0x3812, 0x00, 0x01,
	0x3813, 0x08, 0x01,
	0x3814, 0x11, 0x01,
	0x3815, 0x11, 0x01,
	0x3820, 0x80, 0x01,
	0x3821, 0x04, 0x01,
	0x4008, 0x02, 0x01,
	0x4009, 0x11, 0x01,
	0x4041, 0x07, 0x01,
	0x4501, 0x00, 0x01,
	0x4640, 0x00, 0x01,
	0x4641, 0x18, 0x01,
	0x4642, 0x62, 0x01,
	0x4643, 0x0a, 0x01,
	0x4645, 0x04, 0x01,
	0x480e, 0x07, 0x01,
	0x4813, 0x98, 0x01,
	0x5001, 0x58, 0x01,
	0x5002, 0x55, 0x01,
	0x5003, 0x42, 0x01,
	0x5023, 0x70, 0x01,
	0x5024, 0x00, 0x01,
	0x5025, 0x08, 0x01,
	0x5026, 0x0c, 0x01,
	0x5027, 0x00, 0x01,
	0x5028, 0x09, 0x01,
	0x5029, 0x90, 0x01,
};

/* 2. 4:3 BIN 60Fps */
const u16 sensor_ov08a10_setfile_A_1632x1224_60fps[] = {
	0x0303, 0x05, 0x01,
	0x0305, 0x9f, 0x01,
	0x0325, 0x90, 0x01,
	0x4837, 0x10, 0x01,
	0x3501, 0x0b, 0x01,
	0x3502, 0x6c, 0x01,
	0x3661, 0x0c, 0x01,
	0x3662, 0x80, 0x01,
	0x366c, 0x02, 0x01,
	0x3714, 0x67, 0x01,
	0x3800, 0x00, 0x01,
	0x3801, 0x00, 0x01,
	0x3802, 0x00, 0x01,
	0x3803, 0x08, 0x01,
	0x3804, 0x0c, 0x01,
	0x3805, 0xdf, 0x01,
	0x3806, 0x09, 0x01,
	0x3807, 0xa7, 0x01,
	0x3808, 0x06, 0x01,
	0x3809, 0x60, 0x01,
	0x380a, 0x04, 0x01,
	0x380b, 0xc8, 0x01,
	0x380e, 0x0b, 0x01,
	0x380f, 0x8c, 0x01,
	0x3810, 0x00, 0x01,
	0x3811, 0x07, 0x01,
	0x3812, 0x00, 0x01,
	0x3813, 0x04, 0x01,
	0x3814, 0x31, 0x01,
	0x3815, 0x31, 0x01,
	0x3820, 0x81, 0x01,
	0x3821, 0x44, 0x01,
	0x4008, 0x01, 0x01,
	0x4009, 0x08, 0x01,
	0x4041, 0x03, 0x01,
	0x4501, 0x0c, 0x01,
	0x4640, 0x01, 0x01,
	0x4641, 0x04, 0x01,
	0x4642, 0x02, 0x01,
	0x4643, 0x00, 0x01,
	0x4645, 0x03, 0x01,
	0x480e, 0x02, 0x01,
	0x4813, 0x90, 0x01,
	0x5001, 0x48, 0x01,
	0x5002, 0x51, 0x01,
	0x5003, 0x42, 0x01,
	0x5023, 0x00, 0x01,
	0x5024, 0x00, 0x01,
	0x5025, 0x00, 0x01,
	0x5026, 0x00, 0x01,
	0x5027, 0x00, 0x01,
	0x5028, 0x00, 0x01,
	0x5029, 0x00, 0x01,
};

/* 3. 16:9 Crop_3264x1836_30Fps */
const u16 sensor_ov08a10_setfile_A_3264x1836_30fps[] = {
	0x0303, 0x05, 0x01,
	0x0305, 0x9f, 0x01,
	0x0325, 0x90, 0x01,
	0x4837, 0x10, 0x01,
	0x3501, 0x16, 0x01,
	0x3502, 0xfa, 0x01,
	0x3661, 0x0f, 0x01,
	0x3662, 0x80, 0x01,
	0x366c, 0x12, 0x01,
	0x3714, 0x63, 0x01,
	0x3800, 0x00, 0x01,
	0x3801, 0x00, 0x01,
	0x3802, 0x00, 0x01,
	0x3803, 0x08, 0x01,
	0x3804, 0x0c, 0x01,
	0x3805, 0xdf, 0x01,
	0x3806, 0x09, 0x01,
	0x3807, 0xa7, 0x01,
	0x3808, 0x0c, 0x01,
	0x3809, 0xc0, 0x01,
	0x380a, 0x07, 0x01,
	0x380b, 0x2c, 0x01,
	0x380e, 0x17, 0x01,
	0x380f, 0x1a, 0x01,
	0x3810, 0x00, 0x01,
	0x3811, 0x11, 0x01,
	0x3812, 0x01, 0x01,
	0x3813, 0x3a, 0x01,
	0x3814, 0x11, 0x01,
	0x3815, 0x11, 0x01,
	0x3820, 0x80, 0x01,
	0x3821, 0x04, 0x01,
	0x4008, 0x02, 0x01,
	0x4009, 0x11, 0x01,
	0x4041, 0x07, 0x01,
	0x4501, 0x00, 0x01,
	0x4640, 0x00, 0x01,
	0x4641, 0x18, 0x01,
	0x4642, 0x62, 0x01,
	0x4643, 0x0a, 0x01,
	0x4645, 0x04, 0x01,
	0x480e, 0x07, 0x01,
	0x4813, 0x98, 0x01,
	0x5001, 0x58, 0x01,
	0x5002, 0x55, 0x01,
	0x5003, 0x42, 0x01,
	0x5023, 0x70, 0x01,
	0x5024, 0x01, 0x01,
	0x5025, 0x3a, 0x01,
	0x5026, 0x0c, 0x01,
	0x5027, 0x00, 0x01,
	0x5028, 0x07, 0x01,
	0x5029, 0x2c, 0x01,
};

const struct sensor_cis_mode_info sensor_ov08a10_mode_info_A_19p2_3264x2448_30fps = {
	.setfile_index = SENSOR_OV08A10_3264x2448_30FPS,
	.setfile = SENSOR_REGS(sensor_ov08a10_setfile_A_3264x2448_30fps),
	.pclk = 160000000ULL,
	.frame_length_lines = 0x171A,
	.line_length_pck = 0x0386,
	.max_analog_gain = 0xF80,
	.max_digital_gain = 0x0400,
	.min_cit = 0x8,
	.max_cit_margin = 28,
	.align_cit = 1,
	.wb_gain_support = false,
	.remosaic_mode = false,
	.state_12bit = SENSOR_12BIT_STATE_OFF,
};

const struct sensor_cis_mode_info sensor_ov08a10_mode_info_A_19p2_3264x1836_30fps = {
	.setfile_index = SENSOR_OV08A10_3264x1836_30FPS,
	.setfile = SENSOR_REGS(sensor_ov08a10_setfile_A_3264x1836_30fps),
	.pclk = 160000000ULL,
	.frame_length_lines = 0x171A,
	.line_length_pck = 0x0386,
	.max_analog_gain = 0xF80,
	.max_digital_gain = 0x0400,
	.min_cit = 0x8,
	.max_cit_margin = 28,
	.align_cit = 1,
	.wb_gain_support = false,
	.remosaic_mode = false,
	.state_12bit = SENSOR_12BIT_STATE_OFF,
};

const struct sensor_cis_mode_info sensor_ov08a10_mode_info_A_19p2_1632x1224_60fps = {
	.setfile_index = SENSOR_OV08A10_1632x1224_60FPS,
	.setfile = SENSOR_REGS(sensor_ov08a10_setfile_A_1632x1224_60fps),
	.pclk = 160000000ULL,
	.frame_length_lines = 0x0B8C,
	.line_length_pck = 0x0386,
	.max_analog_gain = 0xF80,
	.max_digital_gain = 0x0400,
	.min_cit = 0x8,
	.max_cit_margin = 28,
	.align_cit = 1,
	.wb_gain_support = false,
	.remosaic_mode = false,
	.state_12bit = SENSOR_12BIT_STATE_OFF,
};

static const struct sensor_cis_mode_info *sensor_ov08a10_mode_infos_A_19p2[] = {
	&sensor_ov08a10_mode_info_A_19p2_3264x2448_30fps,
	&sensor_ov08a10_mode_info_A_19p2_3264x1836_30fps,
	&sensor_ov08a10_mode_info_A_19p2_1632x1224_60fps,
};

static const struct sensor_ov08a10_private_data sensor_ov08a10_private_data_A_19p2 = {
	.global = SENSOR_REGS(sensor_ov08a10_setfile_A_19p2_Global),
};

static const struct sensor_cis_info sensor_ov08a10_info_A_19p2 = {
	.name = "OV08A10",
	.version = "OV08A10 setting_MCLK=19.2Mhz_MIPI_996Mbps_SSMC_official_rev1.9",
	.max_width = 3264,
	.max_height = 2448,
	.min_analog_gain = 0x100,
	.min_digital_gain = 0x0100,
	.fine_integration_time = 0x00,
	.cit_compensation_threshold = 15,
	.readout_factor = 2, /* unit is half row time (1Tline = 2*LLP/PCLK) */
	.use_group_param_hold = false,
	.mode_infos = sensor_ov08a10_mode_infos_A_19p2,
	.mode_count = ARRAY_SIZE(sensor_ov08a10_mode_infos_A_19p2),
#ifdef USE_CAMERA_ADAPTIVE_MIPI
	.mipi_mode = sensor_ov08a10_setfile_A_19p2_mipi_sensor_mode,
	.mipi_mode_count = ARRAY_SIZE(sensor_ov08a10_setfile_A_19p2_mipi_sensor_mode),
#endif
	.priv = (void *)&sensor_ov08a10_private_data_A_19p2,
};

#endif
